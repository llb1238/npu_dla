-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity LSTM_Top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_r_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    out_r_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC );
end;


architecture behav of LSTM_Top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "LSTM_Top_LSTM_Top,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.297000,HLS_SYN_LAT=13463365,HLS_SYN_TPT=none,HLS_SYN_MEM=284,HLS_SYN_DSP=0,HLS_SYN_FF=16905,HLS_SYN_LUT=16704,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal img_dat_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_dat_ce0 : STD_LOGIC;
    signal img_dat_we0 : STD_LOGIC;
    signal img_dat_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_ce0 : STD_LOGIC;
    signal res_we0 : STD_LOGIC;
    signal res_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_ce1 : STD_LOGIC;
    signal res_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_idle : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_ready : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_in_r_TREADY : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_ce0 : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_we0 : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_ce : STD_LOGIC;
    signal grp_infer_fu_75_ap_start : STD_LOGIC;
    signal grp_infer_fu_75_ap_done : STD_LOGIC;
    signal grp_infer_fu_75_ap_idle : STD_LOGIC;
    signal grp_infer_fu_75_ap_ready : STD_LOGIC;
    signal grp_infer_fu_75_input_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_infer_fu_75_input_r_ce0 : STD_LOGIC;
    signal grp_infer_fu_75_res_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_infer_fu_75_res_ce0 : STD_LOGIC;
    signal grp_infer_fu_75_res_we0 : STD_LOGIC;
    signal grp_infer_fu_75_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_infer_fu_75_res_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_infer_fu_75_res_ce1 : STD_LOGIC;
    signal grp_infer_fu_75_grp_fu_114_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_infer_fu_75_grp_fu_114_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_infer_fu_75_grp_fu_114_p_ce : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_idle : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_ready : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TREADY : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_ce0 : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TDATA : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID : STD_LOGIC;
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_infer_fu_75_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal out_r_TDATA_reg : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal regslice_both_out_r_U_apdone_blk : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal regslice_both_in_r_U_apdone_blk : STD_LOGIC;
    signal in_r_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal in_r_TVALID_int_regslice : STD_LOGIC;
    signal in_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_r_U_ack_in : STD_LOGIC;
    signal out_r_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal out_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_r_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component LSTM_Top_LSTM_Top_Pipeline_VITIS_LOOP_13_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_TVALID : IN STD_LOGIC;
        in_r_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
        in_r_TREADY : OUT STD_LOGIC;
        img_dat_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_dat_ce0 : OUT STD_LOGIC;
        img_dat_we0 : OUT STD_LOGIC;
        img_dat_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_ce : OUT STD_LOGIC );
    end component;


    component LSTM_Top_infer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        res_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        res_ce1 : OUT STD_LOGIC;
        res_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_114_p_ce : OUT STD_LOGIC );
    end component;


    component LSTM_Top_LSTM_Top_Pipeline_VITIS_LOOP_27_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        res_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
        out_r_TVALID : OUT STD_LOGIC );
    end component;


    component LSTM_Top_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LSTM_Top_img_dat_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LSTM_Top_res_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component LSTM_Top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    img_dat_U : component LSTM_Top_img_dat_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => img_dat_address0,
        ce0 => img_dat_ce0,
        we0 => img_dat_we0,
        d0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_d0,
        q0 => img_dat_q0);

    res_U : component LSTM_Top_res_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => res_address0,
        ce0 => res_ce0,
        we0 => res_we0,
        d0 => grp_infer_fu_75_res_d0,
        q0 => res_q0,
        address1 => grp_infer_fu_75_res_address1,
        ce1 => res_ce1,
        q1 => res_q1);

    grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68 : component LSTM_Top_LSTM_Top_Pipeline_VITIS_LOOP_13_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start,
        ap_done => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done,
        ap_idle => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_idle,
        ap_ready => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_ready,
        in_r_TVALID => in_r_TVALID_int_regslice,
        in_r_TDATA => in_r_TDATA_int_regslice,
        in_r_TREADY => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_in_r_TREADY,
        img_dat_address0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_address0,
        img_dat_ce0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_ce0,
        img_dat_we0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_we0,
        img_dat_d0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_d0,
        grp_fu_114_p_din0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din0,
        grp_fu_114_p_din1 => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din1,
        grp_fu_114_p_dout0 => grp_fu_114_p2,
        grp_fu_114_p_ce => grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_ce);

    grp_infer_fu_75 : component LSTM_Top_infer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_infer_fu_75_ap_start,
        ap_done => grp_infer_fu_75_ap_done,
        ap_idle => grp_infer_fu_75_ap_idle,
        ap_ready => grp_infer_fu_75_ap_ready,
        input_r_address0 => grp_infer_fu_75_input_r_address0,
        input_r_ce0 => grp_infer_fu_75_input_r_ce0,
        input_r_q0 => img_dat_q0,
        res_address0 => grp_infer_fu_75_res_address0,
        res_ce0 => grp_infer_fu_75_res_ce0,
        res_we0 => grp_infer_fu_75_res_we0,
        res_d0 => grp_infer_fu_75_res_d0,
        res_address1 => grp_infer_fu_75_res_address1,
        res_ce1 => grp_infer_fu_75_res_ce1,
        res_q1 => res_q1,
        grp_fu_114_p_din0 => grp_infer_fu_75_grp_fu_114_p_din0,
        grp_fu_114_p_din1 => grp_infer_fu_75_grp_fu_114_p_din1,
        grp_fu_114_p_dout0 => grp_fu_114_p2,
        grp_fu_114_p_ce => grp_infer_fu_75_grp_fu_114_p_ce);

    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107 : component LSTM_Top_LSTM_Top_Pipeline_VITIS_LOOP_27_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start,
        ap_done => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done,
        ap_idle => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_idle,
        ap_ready => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_ready,
        out_r_TREADY => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TREADY,
        res_address0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_address0,
        res_ce0 => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_ce0,
        res_q0 => res_q0,
        out_r_TDATA => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TDATA,
        out_r_TVALID => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID);

    fdiv_32ns_32ns_32_16_no_dsp_1_U157 : component LSTM_Top_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_114_p0,
        din1 => grp_fu_114_p1,
        ce => grp_fu_114_ce,
        dout => grp_fu_114_p2);

    regslice_both_in_r_U : component LSTM_Top_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_r_TDATA,
        vld_in => in_r_TVALID,
        ack_in => regslice_both_in_r_U_ack_in,
        data_out => in_r_TDATA_int_regslice,
        vld_out => in_r_TVALID_int_regslice,
        ack_out => in_r_TREADY_int_regslice,
        apdone_blk => regslice_both_in_r_U_apdone_blk);

    regslice_both_out_r_U : component LSTM_Top_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_r_TDATA_int_regslice,
        vld_in => grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID,
        ack_in => out_r_TREADY_int_regslice,
        data_out => out_r_TDATA,
        vld_out => regslice_both_out_r_U_vld_out,
        ack_out => out_r_TREADY,
        apdone_blk => regslice_both_out_r_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_ready = ap_const_logic_1)) then 
                    grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_ready = ap_const_logic_1)) then 
                    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_infer_fu_75_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_infer_fu_75_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_infer_fu_75_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_infer_fu_75_ap_ready = ap_const_logic_1)) then 
                    grp_infer_fu_75_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                out_r_TDATA_reg <= grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done, grp_infer_fu_75_ap_done, grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done, ap_CS_fsm, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, regslice_both_out_r_U_apdone_blk, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_infer_fu_75_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (regslice_both_out_r_U_apdone_blk = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done)
    begin
        if ((grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_infer_fu_75_ap_done)
    begin
        if ((grp_infer_fu_75_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done)
    begin
        if ((grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(regslice_both_out_r_U_apdone_blk)
    begin
        if ((regslice_both_out_r_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_ap_start_reg;
    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start <= grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_ap_start_reg;
    grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TREADY <= (out_r_TREADY_int_regslice and ap_CS_fsm_state7);

    grp_fu_114_ce_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_ce, grp_infer_fu_75_grp_fu_114_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_114_ce <= grp_infer_fu_75_grp_fu_114_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_114_ce <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_ce;
        else 
            grp_fu_114_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_114_p0_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din0, grp_infer_fu_75_grp_fu_114_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_114_p0 <= grp_infer_fu_75_grp_fu_114_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_114_p0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din0;
        else 
            grp_fu_114_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_114_p1_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din1, grp_infer_fu_75_grp_fu_114_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_114_p1 <= grp_infer_fu_75_grp_fu_114_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_114_p1 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_grp_fu_114_p_din1;
        else 
            grp_fu_114_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_infer_fu_75_ap_start <= grp_infer_fu_75_ap_start_reg;

    img_dat_address0_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_address0, grp_infer_fu_75_input_r_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            img_dat_address0 <= grp_infer_fu_75_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img_dat_address0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_address0;
        else 
            img_dat_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_dat_ce0_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_ce0, grp_infer_fu_75_input_r_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            img_dat_ce0 <= grp_infer_fu_75_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img_dat_ce0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_ce0;
        else 
            img_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_dat_we0_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img_dat_we0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_img_dat_we0;
        else 
            img_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    in_r_TREADY <= regslice_both_in_r_U_ack_in;

    in_r_TREADY_int_regslice_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_in_r_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_r_TREADY_int_regslice <= grp_LSTM_Top_Pipeline_VITIS_LOOP_13_1_fu_68_in_r_TREADY;
        else 
            in_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out_r_TDATA_int_regslice_assign_proc : process(grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TDATA, grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID, ap_CS_fsm_state7, out_r_TDATA_reg)
    begin
        if (((grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            out_r_TDATA_int_regslice <= grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_out_r_TDATA;
        else 
            out_r_TDATA_int_regslice <= out_r_TDATA_reg;
        end if; 
    end process;

    out_r_TVALID <= regslice_both_out_r_U_vld_out;

    res_address0_assign_proc : process(grp_infer_fu_75_res_address0, grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_address0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_address0 <= grp_infer_fu_75_res_address0;
        else 
            res_address0 <= "XXXX";
        end if; 
    end process;


    res_ce0_assign_proc : process(grp_infer_fu_75_res_ce0, grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            res_ce0 <= grp_LSTM_Top_Pipeline_VITIS_LOOP_27_2_fu_107_res_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_ce0 <= grp_infer_fu_75_res_ce0;
        else 
            res_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_ce1_assign_proc : process(grp_infer_fu_75_res_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_ce1 <= grp_infer_fu_75_res_ce1;
        else 
            res_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    res_we0_assign_proc : process(grp_infer_fu_75_res_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            res_we0 <= grp_infer_fu_75_res_we0;
        else 
            res_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
